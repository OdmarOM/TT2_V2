<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Ramh.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Ramh.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Aug 22 00:56:45 2018
<BR><P>
<H3>Maximum Stack Usage =        772 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RobotThread(const void*) &rArr; std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &) &rArr; std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ae]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[52]">rt_alloc_box</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">rt_alloc_box</a><BR>
 <LI><a href="#[1e]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">NMI_Handler</a><BR>
 <LI><a href="#[1f]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">HardFault_Handler</a><BR>
 <LI><a href="#[20]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">MemManage_Handler</a><BR>
 <LI><a href="#[21]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">BusFault_Handler</a><BR>
 <LI><a href="#[22]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">UsageFault_Handler</a><BR>
 <LI><a href="#[24]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">DebugMon_Handler</a><BR>
 <LI><a href="#[39]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[236]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ae]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[234]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b1]">__rw::__rw_allocate(unsigned, int)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[60]">&lang;Func5&rang;</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.<Func5>) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[39]">ADC1_2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">BusFault_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3c]">CAN1_RX1_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3d]">CAN1_SCE_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">DMA1_Channel1_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">DMA1_Channel2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">DMA1_Channel3_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">DMA1_Channel4_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">DMA1_Channel5_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">DMA1_Channel6_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[38]">DMA1_Channel7_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">DebugMon_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">EXTI0_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4f]">EXTI15_10_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">EXTI1_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">EXTI2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">EXTI3_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">EXTI4_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3e]">EXTI9_5_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">FLASH_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">HardFault_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[47]">I2C1_ER_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[46]">I2C1_EV_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[49]">I2C2_ER_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[48]">I2C2_EV_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">MemManage_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">NMI_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">PVD_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">PendSV_Handler</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">RCC_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[50]">RTCAlarm_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">RTC_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[aa]">Reset_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4a]">SPI1_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4b]">SPI2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">SVC_Handler</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">SysTick_Handler</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[54]">SystemInit</a> from .\objects\system_stm32f10x.o(i.SystemInit) referenced from .\objects\startup_stm32f10x_md.o(.text)
 <LI><a href="#[29]">TAMPER_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3f]">TIM1_BRK_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[42]">TIM1_CC_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">TIM1_TRG_COM_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[40]">TIM1_UP_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[43]">TIM2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[44]">TIM3_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[45]">TIM4_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4c]">USART1_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4d]">USART2_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4e]">USART3_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[51]">USBWakeUp_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3a]">USB_HP_CAN1_TX_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3b]">USB_LP_CAN1_RX0_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">UsageFault_Handler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">WWDG_IRQHandler</a> from .\objects\startup_stm32f10x_md.o(.text) referenced from .\objects\startup_stm32f10x_md.o(RESET)
 <LI><a href="#[78]">RobotThread(const void*)</a> from .\objects\osobjects.o(i._Z11RobotThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7a]">Phase_Thread(const void*)</a> from .\objects\osobjects.o(i._Z12Phase_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[79]">Routine_Thread(const void*)</a> from .\objects\osobjects.o(i._Z14Routine_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7e]">Left_Hip_Thread(const void*)</a> from .\objects\osobjects.o(i._Z15Left_Hip_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7f]">Left_Knee_Thread(const void*)</a> from .\objects\osobjects.o(i._Z16Left_Knee_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7b]">Right_Hip_Thread(const void*)</a> from .\objects\osobjects.o(i._Z16Right_Hip_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[80]">Left_Ankle_Thread(const void*)</a> from .\objects\osobjects.o(i._Z17Left_Ankle_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7c]">Right_Knee_Thread(const void*)</a> from .\objects\osobjects.o(i._Z17Right_Knee_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[7d]">Right_Ankle_Thread(const void*)</a> from .\objects\osobjects.o(i._Z18Right_Ankle_ThreadPKv) referenced from .\objects\osobjects.o(.constdata)
 <LI><a href="#[63]">__default_new_handler()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_newhandler_noexceptions.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(new.o)(i._Znwj)
 <LI><a href="#[87]">Knee_Joint::GetMotorPulses(float)</a> from .\objects\joint.o(i._ZN10Knee_Joint14GetMotorPulsesEf) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[88]">Knee_Joint::SetHome()</a> from .\objects\joint.o(i._ZN10Knee_Joint7SetHomeEv) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[89]">Ankle_Joint::GetMotorPulses(float)</a> from .\objects\joint.o(i._ZN11Ankle_Joint14GetMotorPulsesEf) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[8a]">Ankle_Joint::SetHome()</a> from .\objects\joint.o(i._ZN11Ankle_Joint7SetHomeEv) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[8c]">SerialUSART2::getChar()</a> from .\objects\usart.o(i._ZN12SerialUSART27getCharEv) referenced from .\objects\usart.o(.constdata__ZTV12SerialUSART2)
 <LI><a href="#[8d]">SerialUSART2::sendChar(char)</a> from .\objects\usart.o(i._ZN12SerialUSART28sendCharEc) referenced from .\objects\usart.o(.constdata__ZTV12SerialUSART2)
 <LI><a href="#[83]">JointInterface::SetAbsolutePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[83]">JointInterface::SetAbsolutePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[83]">JointInterface::SetAbsolutePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV14JointInterface)
 <LI><a href="#[83]">JointInterface::SetAbsolutePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[85]">JointInterface::SetAbsolutePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[85]">JointInterface::SetAbsolutePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[85]">JointInterface::SetAbsolutePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV14JointInterface)
 <LI><a href="#[85]">JointInterface::SetAbsolutePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[84]">JointInterface::SetRelativePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[84]">JointInterface::SetRelativePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[84]">JointInterface::SetRelativePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV14JointInterface)
 <LI><a href="#[84]">JointInterface::SetRelativePosition_C(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_CEf) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[86]">JointInterface::SetRelativePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV10Knee_Joint)
 <LI><a href="#[86]">JointInterface::SetRelativePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV11Ankle_Joint)
 <LI><a href="#[86]">JointInterface::SetRelativePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV14JointInterface)
 <LI><a href="#[86]">JointInterface::SetRelativePosition_V(float)</a> from .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_VEf) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[8e]">Home_Trajectory::Perform_Trajectory(JointInterface*)</a> from .\objects\trajectory.o(i._ZN15Home_Trajectory18Perform_TrajectoryEP14JointInterface) referenced from .\objects\trajectory.o(.constdata__ZTV15Home_Trajectory)
 <LI><a href="#[90]">Anatomic_Trajectory::Perform_Trajectory(JointInterface*)</a> from .\objects\trajectory.o(i._ZN19Anatomic_Trajectory18Perform_TrajectoryEP14JointInterface) referenced from .\objects\trajectory.o(.constdata__ZTV19Anatomic_Trajectory)
 <LI><a href="#[91]">Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)</a> from .\objects\trajectory.o(i._ZN19Hip_Gate_Trajectory18Perform_TrajectoryEP14JointInterface) referenced from .\objects\trajectory.o(.constdata__ZTV19Hip_Gate_Trajectory)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV15Home_Trajectory)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV19Anatomic_Trajectory)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV19Hip_Gate_Trajectory)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV19TrajectoryInterface)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV20Knee_Gate_Trajectory)
 <LI><a href="#[8f]">TrajectoryInterface::SetStartPoint(int)</a> from .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi) referenced from .\objects\trajectory.o(.constdata__ZTV21Ankle_Gate_Trajectory)
 <LI><a href="#[92]">Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)</a> from .\objects\trajectory.o(i._ZN20Knee_Gate_Trajectory18Perform_TrajectoryEP14JointInterface) referenced from .\objects\trajectory.o(.constdata__ZTV20Knee_Gate_Trajectory)
 <LI><a href="#[93]">Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)</a> from .\objects\trajectory.o(i._ZN21Ankle_Gate_Trajectory18Perform_TrajectoryEP14JointInterface) referenced from .\objects\trajectory.o(.constdata__ZTV21Ankle_Gate_Trajectory)
 <LI><a href="#[5a]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text)
 <LI><a href="#[98]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[98]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[77]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
 <LI><a href="#[65]">__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e)
 <LI><a href="#[62]">__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZSt13__rw_get_catsv)
 <LI><a href="#[a9]">__rw::__rw_throw_exception_noex(int, char*)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_impl_noex.o)(i._ZN4__rw25__rw_throw_exception_noexEiPc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_noex.o)(.data)
 <LI><a href="#[94]">Hip_Joint::GetMotorPulses(float)</a> from .\objects\joint.o(i._ZN9Hip_Joint14GetMotorPulsesEf) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[95]">Hip_Joint::SetHome()</a> from .\objects\joint.o(i._ZN9Hip_Joint7SetHomeEv) referenced from .\objects\joint.o(.constdata__ZTV9Hip_Joint)
 <LI><a href="#[96]">UsartUser::GetCommand()</a> from .\objects\user.o(i._ZN9UsartUser10GetCommandEv) referenced from .\objects\user.o(.constdata__ZTV9UsartUser)
 <LI><a href="#[9d]">std::__rw_exception::what() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNKSt14__rw_exception4whatEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[a3]">std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[a2]">std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[5f]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[5f]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
 <LI><a href="#[9a]">std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[99]">std::ctype_byname&lang;char&rang;::~ctype_byname()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[9c]">std::__rw_exception::~__rw_exception()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[76]">std::__rw_open_cat_data::__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[75]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[75]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
 <LI><a href="#[9b]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[9b]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[9f]">std::ctype&lang;char&rang;::~ctype__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[9e]">std::ctype&lang;char&rang;::~ctype()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[97]">std::locale::facet::~facet__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt6locale5facetD0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[61]">std::locale::~locale()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7classicEv)
 <LI><a href="#[66]">std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()</a> from .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EED1Ev) referenced from .\objects\osobjects.o(i.__sti___13_OsObjects_cpp_Linker)
 <LI><a href="#[a1]">std::messages&lang;char&rang;::~messages__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[a0]">std::messages&lang;char&rang;::~messages()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[64]">operator delete[] (void*)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(array_del.o)(i._ZdaPv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_vec_new.o)(i.__cxa_vec_new)
 <LI><a href="#[8b]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 2 times from .\objects\user.o(.constdata__ZTV12SerialStream)
 <LI><a href="#[8b]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 2 times from .\objects\user.o(.constdata__ZTV13UserInterface)
 <LI><a href="#[8b]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 2 times from .\objects\joint.o(.constdata__ZTV14JointInterface)
 <LI><a href="#[8b]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 3 times from .\objects\trajectory.o(.constdata__ZTV19TrajectoryInterface)
 <LI><a href="#[ab]">__main</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__main.o)(!!!main) referenced from .\objects\startup_stm32f10x_md.o(.text)
 <LI><a href="#[a7]">__sti___10_locale_cpp_ff99fc7b</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.__sti___10_locale_cpp_ff99fc7b) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(.init_array)
 <LI><a href="#[a8]">__sti___10_rwcats_cpp_64e8068e</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(.init_array)
 <LI><a href="#[a5]">__sti___13_OsObjects_cpp_Linker</a> from .\objects\osobjects.o(i.__sti___13_OsObjects_cpp_Linker) referenced from .\objects\osobjects.o(.init_array)
 <LI><a href="#[a6]">__sti___8_char_cpp_a3dc957a</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i.__sti___8_char_cpp_a3dc957a) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.init_array)
 <LI><a href="#[a4]">__sti___8_main_cpp_usart</a> from .\objects\main.o(i.__sti___8_main_cpp_usart) referenced from .\objects\main.o(.init_array)
 <LI><a href="#[5b]">_get_lc_ctype</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_ctype_c.o)(locale$$code) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_ctype_table.o)(.text)
 <LI><a href="#[57]">_printf_input_char</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text)
 <LI><a href="#[59]">_sbackspace</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text)
 <LI><a href="#[5d]">_scanf_char_input</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text)
 <LI><a href="#[58]">_sgetc</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text)
 <LI><a href="#[56]">_snputc</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_snputc.o)(.text) referenced 2 times from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(c89vsnprintf.o)(.text)
 <LI><a href="#[5c]">fputc</a> from .\objects\retarget.o(i.fputc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_file.o)(.text)
 <LI><a href="#[5e]">isspace</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(isspace.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text)
 <LI><a href="#[82]">main</a> from .\objects\main.o(i.main) referenced from .\objects\rtx_conf_cm.o(.constdata)
 <LI><a href="#[74]">osThreadExit</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadExit) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadCreate)
 <LI><a href="#[81]">osTimerThread</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osTimerThread) referenced from .\objects\rtx_conf_cm.o(.constdata)
 <LI><a href="#[73]">os_idle_demon</a> from .\objects\rtx_conf_cm.o(i.os_idle_demon) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_sys_init)
 <LI><a href="#[52]">rt_alloc_box</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_membox.o)(i.rt_alloc_box) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text)
 <LI><a href="#[53]">rt_free_box</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_membox.o)(i.rt_free_box) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text)
 <LI><a href="#[68]">rt_mut_release</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mutex.o)(i.rt_mut_release) referenced from .\objects\rtx_conf_cm.o(i._mutex_release)
 <LI><a href="#[67]">rt_mut_wait</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mutex.o)(i.rt_mut_wait) referenced from .\objects\rtx_conf_cm.o(i._mutex_acquire)
 <LI><a href="#[69]">svcKernelInitialize</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcKernelInitialize) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osKernelInitialize)
 <LI><a href="#[6a]">svcKernelStart</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcKernelStart) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osKernelStart)
 <LI><a href="#[6b]">svcMessageGet</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcMessageGet) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osMessageGet)
 <LI><a href="#[6c]">svcMutexCreate</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcMutexCreate) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osMutexCreate)
 <LI><a href="#[6d]">svcSignalSet</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcSignalSet) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osSignalSet)
 <LI><a href="#[6e]">svcSignalWait</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcSignalWait) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osSignalWait)
 <LI><a href="#[6f]">svcThreadCreate</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadCreate) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadCreate)
 <LI><a href="#[70]">svcThreadGetId</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadGetId) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadExit)
 <LI><a href="#[71]">svcThreadTerminate</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadTerminate) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadExit)
 <LI><a href="#[72]">svcTimerCall</a> from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcTimerCall) referenced from C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osTimerCall)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ab]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__main.o)(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[262]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)

<P><STRONG><a name="[263]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)

<P><STRONG><a name="[b3]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter_copy.o)(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[264]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter_zi.o)(!!handler_zi), UNUSED)

<P><STRONG><a name="[b4]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_n.o)(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[118]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_percent.o)(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[b6]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_p.o)(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[b8]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_f.o)(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[ba]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_e.o)(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[bb]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_g.o)(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[bc]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_a.o)(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[265]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_ll.o)(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[be]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_i.o)(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c0]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_d.o)(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c1]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_u.o)(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c2]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_o.o)(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[c4]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_x.o)(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[c6]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lli.o)(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[c8]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lld.o)(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[c9]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llu.o)(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[ca]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llo.o)(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[cc]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llx.o)(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[266]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_l.o)(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[ce]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_c.o)(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d0]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_s.o)(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[d2]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lc.o)(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[d4]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_ls.o)(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[267]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_percent_end.o)(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[e3]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit.o)(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[268]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[269]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[26a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_common &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[26b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[26c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[26d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[da]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[26e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[26f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[db]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[270]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[271]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[272]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[273]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[274]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[275]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[276]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[277]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[278]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[279]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[27a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[27b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[27c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[e9]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown.o)(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[de]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[27d]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[27e]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[27f]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[280]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[281]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[282]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[283]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[b1]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry.o)(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[284]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry2.o)(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[e0]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry4.o)(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e2]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry2.o)(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[285]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry2.o)(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[e4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry2.o)(.ARM.Collect$$rtentry$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __rt_entry_postli_1 &rArr; _platform_post_lib_init &rArr; osKernelInitialize &rArr; svcKernelInitialize &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
</UL>

<P><STRONG><a name="[e6]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__rtentry2.o)(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Linker::Start_Routine() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[fe]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rtexit.o)(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rtexit2.o)(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[286]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rtexit2.o)(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ea]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rtexit2.o)(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[e5]"></a>_platform_post_lib_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\objects\rtx_conf_cm.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _platform_post_lib_init &rArr; osKernelInitialize &rArr; svcKernelInitialize &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_postli_1
</UL>

<P><STRONG><a name="[287]"></a>rt_set_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text), UNUSED)

<P><STRONG><a name="[224]"></a>rt_get_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
</UL>

<P><STRONG><a name="[288]"></a>os_set_env</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text), UNUSED)

<P><STRONG><a name="[289]"></a>_alloc_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text), UNUSED)

<P><STRONG><a name="[28a]"></a>_free_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text), UNUSED)

<P><STRONG><a name="[23]"></a>SVC_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PendSV_Handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PendSV_Handler &rArr; rt_pop_req &rArr; rt_mbx_psh &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SysTick_Handler &rArr; rt_systick &rArr; sysTimerTick &rArr; isrMessagePut &rArr; isr_mbx_send &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f2]"></a>OS_Tick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm3.o)(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_tick_irqack
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[aa]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))

<P><STRONG><a name="[28b]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(maybetermalloc1.o)(.emb_text), UNUSED)

<P><STRONG><a name="[1e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, .\objects\startup_stm32f10x_md.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[28c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libspace.o)(.text), UNUSED)

<P><STRONG><a name="[101]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libspace.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f4]"></a>_malloc_internal</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heap1_SizeAdjust
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[f7]"></a>malloc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[f9]"></a>_free_internal</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_free_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[fa]"></a>free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_free_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[fb]"></a>__c89vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(c89vsnprintf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
</UL>

<P><STRONG><a name="[e7]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(exit.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ff]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(aeabi_atexit.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___13_OsObjects_cpp_Linker
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[11d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::Hip_Joint(Joint_Motor_Id)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::Ankle_Joint(Joint_Motor_Id)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::Knee_Joint(Joint_Motor_Id)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(int)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[28d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[290]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[6]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_aeabi.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[f8]"></a>__rt_heap_descriptor</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_heap_descriptor_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_heap_descriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[102]"></a>__rt_new_handler_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_new_handler_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_new_handler_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[100]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_ddtor_pointer_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ddtor_pointer_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[291]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(hguard.o)(.text), UNUSED)

<P><STRONG><a name="[292]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(hguard.o)(.text), UNUSED)

<P><STRONG><a name="[13]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)

<P><STRONG><a name="[a]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[104]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[d7]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[106]"></a>__Heap_Initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_init_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __Heap_Initialize &rArr; _mutex_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[8]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_init_mt.o)(.text), UNUSED)

<P><STRONG><a name="[108]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_rserrno.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[10a]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_rserrno.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[10c]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_pad.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[10d]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_pad.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[10e]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_truncate.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[10f]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_truncate.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[10b]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_str.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[bf]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[b5]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_charcount.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[fc]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[fd]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sputc.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[56]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_snputc.o)(.text))
<BR>[Address Reference Count : 2]<UL><LI> c89vsnprintf.o(.text)
<LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wctomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[c7]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_longlong_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[115]"></a>_printf_longlong_oct</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[c3]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[cb]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[116]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[c5]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[cd]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[b7]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[111]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__printf_flags_ss_wp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[df]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(cxa_finalize.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxa_finalize &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[119]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_pvfn_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[11f]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>

<P><STRONG><a name="[11c]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[293]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text), UNUSED)

<P><STRONG><a name="[238]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[11e]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[294]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__default_new_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_newhandler_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __default_new_handler() &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[109]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[295]"></a>__errno$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text), UNUSED)

<P><STRONG><a name="[296]"></a>__rt_errno_addr$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text), UNUSED)

<P><STRONG><a name="[103]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_extend_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[114]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lludiv10.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[123]"></a>fprintf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fprintf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = fprintf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
</UL>

<P><STRONG><a name="[125]"></a>vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(vsnprintf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[110]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_intcommon.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[297]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[12e]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[cf]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[d1]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[12f]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[d3]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[d5]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[130]"></a>sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[113]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_wcrtomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
</UL>

<P><STRONG><a name="[133]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(abort.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::__default_terminate_handler()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
</UL>

<P><STRONG><a name="[11b]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_exit.o)(.text))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[105]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtmem_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[11a]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_pvfn_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[1bb]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcpy.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
</UL>

<P><STRONG><a name="[1aa]"></a>strrchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strrchr.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1b4]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strlen.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
</UL>

<P><STRONG><a name="[1d4]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcat.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[298]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[299]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[120]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[29a]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[138]"></a>__aeabi_vec_delete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_delete_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[121]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_terminate.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[13a]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[e1]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sys_stackheap_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[132]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_ctype_table.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[d9]"></a>__rt_locale</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_locale_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_mixed
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[13b]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_eh_globals_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_eh_globals_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[12d]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_infnan.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>

<P><STRONG><a name="[124]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_file.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fprintf
</UL>

<P><STRONG><a name="[13e]"></a>_scanf_longlong</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_longlong.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_longlong
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[140]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_int.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[14e]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_str.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[131]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>

<P><STRONG><a name="[58]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>_scanf_mbtowc</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_mbtowc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _scanf_mbtowc &rArr; _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[144]"></a>_scanf_wctomb</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wctomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _scanf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[146]"></a>_scanf_wstring</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wstr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _scanf_wstring &rArr; _scanf_wcharmap
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[127]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(bigflt0.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[147]"></a>setlocale</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = setlocale &rArr; _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>

<P><STRONG><a name="[136]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_general.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[134]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_abrt_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[135]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtmem_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14b]"></a>memcpy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(memcpy.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1d0]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcmpv7m.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[13c]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[29b]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(isspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isspace &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[14c]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_hex.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[13f]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_chval.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>

<P><STRONG><a name="[141]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[152]"></a>_scanf_really_real</STRONG> (Thumb, 684 bytes, Stack size 120 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_fp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[145]"></a>_scanf_wcharmap</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wcharmap.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
</UL>

<P><STRONG><a name="[148]"></a>_setlocale_r</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
</UL>

<P><STRONG><a name="[143]"></a>_mbrtowc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_mbrtowc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
</UL>

<P><STRONG><a name="[14a]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_abrt_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[1df]"></a>__cxa_rethrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_rethrow_noexceptions.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[1e0]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_dtor_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>

<P><STRONG><a name="[159]"></a>_scanf_really_hex_real</STRONG> (Thumb, 786 bytes, Stack size 80 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_hexfp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[261]"></a>_scanf_really_infnan</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_infnan.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[1de]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(ARM_vec_cleanup_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_vec_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[15a]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(llshl.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[29d]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(llshl.o)(.text), UNUSED)

<P><STRONG><a name="[128]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[15d]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[15c]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[160]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[15e]"></a>_e2d</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[15f]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[129]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[151]"></a>_btod_edivd</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[12a]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[150]"></a>_btod_emuld</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[161]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[163]"></a>DelayInit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, .\objects\delay.o(i.DelayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelayInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[169]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, .\objects\stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Initialize
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[165]"></a>GPIO_Initialize</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, .\objects\hardwareinit.o(i.GPIO_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_Initialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a2]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\objects\stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_Trajectory::Perform_Trajectory(JointInterface*)
</UL>

<P><STRONG><a name="[1bd]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\objects\stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Move_Step(int)
</UL>

<P><STRONG><a name="[1be]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\objects\stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Move_Step(int)
</UL>

<P><STRONG><a name="[166]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\objects\stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Initialize
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[168]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\objects\stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Initialize
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[16d]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, .\objects\stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[167]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, .\objects\stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Initialize
</UL>

<P><STRONG><a name="[164]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, .\objects\system_stm32f10x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayInit
</UL>

<P><STRONG><a name="[54]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, .\objects\system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[181]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_getChar()
</UL>

<P><STRONG><a name="[17e]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[180]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_sendChar(char)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_getChar()
</UL>

<P><STRONG><a name="[17d]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, .\objects\stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[16c]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, .\objects\stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[182]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_getChar()
</UL>

<P><STRONG><a name="[186]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_sendChar(char)
</UL>

<P><STRONG><a name="[17c]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\objects\stm32f10x_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>

<P><STRONG><a name="[16e]"></a>InitThreads()</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, .\objects\osobjects.o(i._Z11InitThreadsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InitThreads() &rArr; osThreadCreate &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>RobotThread(const void*)</STRONG> (Thumb, 968 bytes, Stack size 24 bytes, .\objects\osobjects.o(i._Z11RobotThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = RobotThread(const void*) &rArr; std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &) &rArr; std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Ankle_Gate_Trajectory()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Knee_Gate_Trajectory()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Hip_Gate_Trajectory()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::pop_back()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Anatomic_Trajectory::Anatomic_Trajectory()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_Trajectory::Home_Trajectory()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>USART2_init(int)</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, .\objects\usart.o(i._Z11USART2_initi))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART2_init(int) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUSART2::SerialUSART2(int)
</UL>

<P><STRONG><a name="[7a]"></a>Phase_Thread(const void*)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z12Phase_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Phase_Thread(const void*) &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>Routine_Thread(const void*)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z14Routine_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Routine_Thread(const void*)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>USART2_getChar()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, .\objects\usart.o(i._Z14USART2_getCharv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART2_getChar()
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUSART2::getChar()
</UL>

<P><STRONG><a name="[7e]"></a>Left_Hip_Thread(const void*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z15Left_Hip_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Left_Hip_Thread(const void*) &rArr; Hip_Joint::Hip_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::Hip_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>USART2_sendChar(char)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\objects\usart.o(i._Z15USART2_sendCharc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART2_sendChar(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUSART2::sendChar(char)
</UL>

<P><STRONG><a name="[7f]"></a>Left_Knee_Thread(const void*)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z16Left_Knee_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Left_Knee_Thread(const void*) &rArr; Knee_Joint::Knee_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::Knee_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>Right_Hip_Thread(const void*)</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z16Right_Hip_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Right_Hip_Thread(const void*) &rArr; Hip_Joint::Hip_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::Hip_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>Left_Ankle_Thread(const void*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z17Left_Ankle_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Left_Ankle_Thread(const void*) &rArr; Ankle_Joint::Ankle_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::Ankle_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>Right_Knee_Thread(const void*)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z17Right_Knee_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Right_Knee_Thread(const void*) &rArr; Knee_Joint::Knee_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::Knee_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>Right_Ankle_Thread(const void*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\objects\osobjects.o(i._Z18Right_Ankle_ThreadPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Right_Ankle_Thread(const void*) &rArr; Ankle_Joint::Ankle_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::Ankle_Joint(Joint_Motor_Id)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.constdata)
</UL>
<P><STRONG><a name="[189]"></a>catgets(__rw::__rw_cat*, int, int, const char*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._Z7catgetsPN4__rw8__rw_catEiiPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
</UL>

<P><STRONG><a name="[18b]"></a>catopen(const char*, int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._Z7catopenPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = catopen(const char*, int) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[87]"></a>Knee_Joint::GetMotorPulses(float)</STRONG> (Thumb, 326 bytes, Stack size 96 bytes, .\objects\joint.o(i._ZN10Knee_Joint14GetMotorPulsesEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Knee_Joint::GetMotorPulses(float) &rArr; std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Get_Current_Position(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV10Knee_Joint)
</UL>
<P><STRONG><a name="[88]"></a>Knee_Joint::SetHome()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\objects\joint.o(i._ZN10Knee_Joint7SetHomeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Knee_Joint::SetHome()
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Set_Current_Position(float, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV10Knee_Joint)
</UL>
<P><STRONG><a name="[187]"></a>Knee_Joint::Knee_Joint(Joint_Motor_Id)</STRONG> (Thumb, 58 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN10Knee_JointC1E14Joint_Motor_Id))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Knee_Joint::Knee_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::JointInterface__sub_object()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Knee_Thread(const void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Knee_Thread(const void*)
</UL>

<P><STRONG><a name="[29e]"></a>Knee_Joint::Knee_Joint__sub_object(Joint_Motor_Id)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN10Knee_JointC1E14Joint_Motor_Id), UNUSED)

<P><STRONG><a name="[89]"></a>Ankle_Joint::GetMotorPulses(float)</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, .\objects\joint.o(i._ZN11Ankle_Joint14GetMotorPulsesEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Ankle_Joint::GetMotorPulses(float) &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Get_Current_Position(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[8a]"></a>Ankle_Joint::SetHome()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\objects\joint.o(i._ZN11Ankle_Joint7SetHomeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ankle_Joint::SetHome()
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Set_Current_Position(float, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[188]"></a>Ankle_Joint::Ankle_Joint(Joint_Motor_Id)</STRONG> (Thumb, 58 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN11Ankle_JointC1E14Joint_Motor_Id))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Ankle_Joint::Ankle_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::JointInterface__sub_object()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Ankle_Thread(const void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Ankle_Thread(const void*)
</UL>

<P><STRONG><a name="[29f]"></a>Ankle_Joint::Ankle_Joint__sub_object(Joint_Motor_Id)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN11Ankle_JointC1E14Joint_Motor_Id), UNUSED)

<P><STRONG><a name="[19c]"></a>SerialStream::puts(const char*)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, .\objects\usart.o(i._ZN12SerialStream4putsEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SerialStream::puts(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Anatomic_Trajectory::Anatomic_Trajectory()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_Trajectory::Home_Trajectory()
</UL>

<P><STRONG><a name="[17a]"></a>SerialStream::printf(const char*, ...)</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, .\objects\usart.o(i._ZN12SerialStream6printfEPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::puts(const char*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Start_Routine()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Pause_Routine()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Stop_Routine()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Ankle_Gate_Trajectory()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Knee_Gate_Trajectory()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Hip_Gate_Trajectory()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phase_Thread(const void*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[8c]"></a>SerialUSART2::getChar()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\objects\usart.o(i._ZN12SerialUSART27getCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SerialUSART2::getChar() &rArr; USART2_getChar()
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_getChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartUser::GetCommand()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usart.o(.constdata__ZTV12SerialUSART2)
</UL>
<P><STRONG><a name="[8d]"></a>SerialUSART2::sendChar(char)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, .\objects\usart.o(i._ZN12SerialUSART28sendCharEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SerialUSART2::sendChar(char) &rArr; USART2_sendChar(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_sendChar(char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usart.o(.constdata__ZTV12SerialUSART2)
</UL>
<P><STRONG><a name="[19d]"></a>SerialUSART2::SerialUSART2(int)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\objects\usart.o(i._ZN12SerialUSART2C1Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SerialUSART2::SerialUSART2(int) &rArr; USART2_init(int) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_init(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_usart
</UL>

<P><STRONG><a name="[2a0]"></a>SerialUSART2::SerialUSART2__sub_object(int)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\objects\usart.o(i._ZN12SerialUSART2C1Ei), UNUSED)

<P><STRONG><a name="[83]"></a>JointInterface::SetAbsolutePosition_C(float)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_CEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JointInterface::SetAbsolutePosition_C(float) &rArr; __aeabi_f2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Get_Current_Position(int)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Address Reference Count : 4]<UL><LI> joint.o(.constdata__ZTV14JointInterface)
<LI> joint.o(.constdata__ZTV9Hip_Joint)
<LI> joint.o(.constdata__ZTV10Knee_Joint)
<LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[85]"></a>JointInterface::SetAbsolutePosition_V(float)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, .\objects\joint.o(i._ZN14JointInterface21SetAbsolutePosition_VEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JointInterface::SetAbsolutePosition_V(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Get_Current_Position(int)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Address Reference Count : 4]<UL><LI> joint.o(.constdata__ZTV14JointInterface)
<LI> joint.o(.constdata__ZTV9Hip_Joint)
<LI> joint.o(.constdata__ZTV10Knee_Joint)
<LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[84]"></a>JointInterface::SetRelativePosition_C(float)</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_CEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JointInterface::SetRelativePosition_C(float) &rArr; Motor::Move_Step(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Set_Current_Position(float, int)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Move_Step(int)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 4]<UL><LI> joint.o(.constdata__ZTV14JointInterface)
<LI> joint.o(.constdata__ZTV9Hip_Joint)
<LI> joint.o(.constdata__ZTV10Knee_Joint)
<LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[86]"></a>JointInterface::SetRelativePosition_V(float)</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, .\objects\joint.o(i._ZN14JointInterface21SetRelativePosition_VEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = JointInterface::SetRelativePosition_V(float) &rArr; Motor::Move_Step(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Set_Current_Position(float, int)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Move_Step(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 4]<UL><LI> joint.o(.constdata__ZTV14JointInterface)
<LI> joint.o(.constdata__ZTV9Hip_Joint)
<LI> joint.o(.constdata__ZTV10Knee_Joint)
<LI> joint.o(.constdata__ZTV11Ankle_Joint)
</UL>
<P><STRONG><a name="[19a]"></a>JointInterface::JointInterface__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\objects\joint.o(i._ZN14JointInterfaceC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::Hip_Joint(Joint_Motor_Id)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::Ankle_Joint(Joint_Motor_Id)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::Knee_Joint(Joint_Motor_Id)
</UL>

<P><STRONG><a name="[8e]"></a>Home_Trajectory::Perform_Trajectory(JointInterface*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\objects\trajectory.o(i._ZN15Home_Trajectory18Perform_TrajectoryEP14JointInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Home_Trajectory::Perform_Trajectory(JointInterface*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trajectory.o(.constdata__ZTV15Home_Trajectory)
</UL>
<P><STRONG><a name="[172]"></a>Home_Trajectory::Home_Trajectory()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN15Home_TrajectoryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Home_Trajectory::Home_Trajectory() &rArr; SerialStream::puts(const char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::puts(const char*)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrajectoryInterface::TrajectoryInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[2a1]"></a>Home_Trajectory::Home_Trajectory__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN15Home_TrajectoryC1Ev), UNUSED)

<P><STRONG><a name="[90]"></a>Anatomic_Trajectory::Perform_Trajectory(JointInterface*)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\objects\trajectory.o(i._ZN19Anatomic_Trajectory18Perform_TrajectoryEP14JointInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Anatomic_Trajectory::Perform_Trajectory(JointInterface*)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trajectory.o(.constdata__ZTV19Anatomic_Trajectory)
</UL>
<P><STRONG><a name="[176]"></a>Anatomic_Trajectory::Anatomic_Trajectory()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN19Anatomic_TrajectoryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Anatomic_Trajectory::Anatomic_Trajectory() &rArr; SerialStream::puts(const char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::puts(const char*)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrajectoryInterface::TrajectoryInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[2a2]"></a>Anatomic_Trajectory::Anatomic_Trajectory__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN19Anatomic_TrajectoryC1Ev), UNUSED)

<P><STRONG><a name="[91]"></a>Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)</STRONG> (Thumb, 1562 bytes, Stack size 272 bytes, .\objects\trajectory.o(i._ZN19Hip_Gate_Trajectory18Perform_TrajectoryEP14JointInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*) &rArr; std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Paused()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Performing()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trajectory.o(.constdata__ZTV19Hip_Gate_Trajectory)
</UL>
<P><STRONG><a name="[179]"></a>Hip_Gate_Trajectory::Hip_Gate_Trajectory()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN19Hip_Gate_TrajectoryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Hip_Gate_Trajectory::Hip_Gate_Trajectory() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrajectoryInterface::TrajectoryInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[2a3]"></a>Hip_Gate_Trajectory::Hip_Gate_Trajectory__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN19Hip_Gate_TrajectoryC1Ev), UNUSED)

<P><STRONG><a name="[8f]"></a>TrajectoryInterface::SetStartPoint(int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\objects\trajectory.o(i._ZN19TrajectoryInterface13SetStartPointEi))
<BR>[Address Reference Count : 6]<UL><LI> trajectory.o(.constdata__ZTV19TrajectoryInterface)
<LI> trajectory.o(.constdata__ZTV15Home_Trajectory)
<LI> trajectory.o(.constdata__ZTV19Anatomic_Trajectory)
<LI> trajectory.o(.constdata__ZTV19Hip_Gate_Trajectory)
<LI> trajectory.o(.constdata__ZTV20Knee_Gate_Trajectory)
<LI> trajectory.o(.constdata__ZTV21Ankle_Gate_Trajectory)
</UL>
<P><STRONG><a name="[1a3]"></a>TrajectoryInterface::TrajectoryInterface__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\objects\trajectory.o(i._ZN19TrajectoryInterfaceC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Ankle_Gate_Trajectory()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Knee_Gate_Trajectory()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Hip_Gate_Trajectory()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Anatomic_Trajectory::Anatomic_Trajectory()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_Trajectory::Home_Trajectory()
</UL>

<P><STRONG><a name="[92]"></a>Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)</STRONG> (Thumb, 1594 bytes, Stack size 272 bytes, .\objects\trajectory.o(i._ZN20Knee_Gate_Trajectory18Perform_TrajectoryEP14JointInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*) &rArr; std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Paused()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Performing()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trajectory.o(.constdata__ZTV20Knee_Gate_Trajectory)
</UL>
<P><STRONG><a name="[178]"></a>Knee_Gate_Trajectory::Knee_Gate_Trajectory()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN20Knee_Gate_TrajectoryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Knee_Gate_Trajectory::Knee_Gate_Trajectory() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrajectoryInterface::TrajectoryInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[2a4]"></a>Knee_Gate_Trajectory::Knee_Gate_Trajectory__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN20Knee_Gate_TrajectoryC1Ev), UNUSED)

<P><STRONG><a name="[93]"></a>Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)</STRONG> (Thumb, 1590 bytes, Stack size 280 bytes, .\objects\trajectory.o(i._ZN21Ankle_Gate_Trajectory18Perform_TrajectoryEP14JointInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*) &rArr; std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Paused()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Is_Performing()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trajectory.o(.constdata__ZTV21Ankle_Gate_Trajectory)
</UL>
<P><STRONG><a name="[177]"></a>Ankle_Gate_Trajectory::Ankle_Gate_Trajectory()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN21Ankle_Gate_TrajectoryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Ankle_Gate_Trajectory::Ankle_Gate_Trajectory() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrajectoryInterface::TrajectoryInterface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[2a5]"></a>Ankle_Gate_Trajectory::Ankle_Gate_Trajectory__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\objects\trajectory.o(i._ZN21Ankle_Gate_TrajectoryC1Ev), UNUSED)

<P><STRONG><a name="[1ae]"></a>__rw::__rw_throw(int, ...)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN4__rw10__rw_throwEiz))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1b1]"></a>__rw::__rw_allocate(unsigned, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwalloc.o)(i._ZN4__rw13__rw_allocateEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>

<P><STRONG><a name="[1b2]"></a>__rw::__rw_deallocate(void*, unsigned, int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwalloc.o)(i._ZN4__rw15__rw_deallocateEPvji))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>

<P><STRONG><a name="[98]"></a>__rw::__rw_facet_base::_C_initfacet(const std::locale&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale))
<BR>[Address Reference Count : 2]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
<LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[1b3]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[2a6]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const char*, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj), UNUSED)

<P><STRONG><a name="[1b7]"></a>__rw::__rw_locale_imp::~__rw_locale_imp()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>

<P><STRONG><a name="[2a7]"></a>__rw::__rw_locale_imp::~__rw_locale_imp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impD1Ev), UNUSED)

<P><STRONG><a name="[1ba]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[2a8]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale__sub_object(const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci), UNUSED)

<P><STRONG><a name="[1bc]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw21__rw_use_c_lib_localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale() &rArr; setlocale &rArr; _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[2a9]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw21__rw_use_c_lib_localeD1Ev), UNUSED)

<P><STRONG><a name="[a9]"></a>__rw::__rw_throw_exception_noex(int, char*)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_impl_noex.o)(i._ZN4__rw25__rw_throw_exception_noexEiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw_exception_noex(int, char*) &rArr; fprintf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_noex.o(.data)
</UL>
<P><STRONG><a name="[18a]"></a>__rw::__catfind(__rw::__rw_cat*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._ZN4__rw9__catfindEPNS_8__rw_catE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[1a1]"></a>Motor::Move_Step(int)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, .\objects\motor.o(i._ZN5Motor9Move_StepEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Motor::Move_Step(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_C(float)
</UL>

<P><STRONG><a name="[19b]"></a>Motor::Motor(int)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\objects\motor.o(i._ZN5MotorC1Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::Hip_Joint(Joint_Motor_Id)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::Ankle_Joint(Joint_Motor_Id)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::Knee_Joint(Joint_Motor_Id)
</UL>

<P><STRONG><a name="[2aa]"></a>Motor::Motor__sub_object(int)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\objects\motor.o(i._ZN5MotorC1Ei), UNUSED)

<P><STRONG><a name="[1bf]"></a>Linker::Stop_Routine()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\objects\linker.o(i._ZN6Linker12Stop_RoutineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Linker::Stop_Routine() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a4]"></a>Linker::Is_Performing()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6Linker13Is_PerformingEv))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
</UL>

<P><STRONG><a name="[1c0]"></a>Linker::Pause_Routine()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\objects\linker.o(i._ZN6Linker13Pause_RoutineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Linker::Pause_Routine() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c1]"></a>Linker::Start_Routine()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\objects\linker.o(i._ZN6Linker13Start_RoutineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Linker::Start_Routine() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18d]"></a>Linker::Get_Current_Position(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6Linker20Get_Current_PositionEi))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_V(float)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_C(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[199]"></a>Linker::Set_Current_Position(float, int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6Linker20Set_Current_PositionEfi))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::SetHome()
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_C(float)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::SetHome()
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::SetHome()
</UL>

<P><STRONG><a name="[1a5]"></a>Linker::Is_Paused()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6Linker9Is_PausedEv))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
</UL>

<P><STRONG><a name="[1ef]"></a>Linker::Linker()</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6LinkerC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___13_OsObjects_cpp_Linker
</UL>

<P><STRONG><a name="[2ab]"></a>Linker::Linker__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\linker.o(i._ZN6LinkerC1Ev), UNUSED)

<P><STRONG><a name="[94]"></a>Hip_Joint::GetMotorPulses(float)</STRONG> (Thumb, 326 bytes, Stack size 96 bytes, .\objects\joint.o(i._ZN9Hip_Joint14GetMotorPulsesEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Hip_Joint::GetMotorPulses(float) &rArr; std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Get_Current_Position(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV9Hip_Joint)
</UL>
<P><STRONG><a name="[95]"></a>Hip_Joint::SetHome()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\objects\joint.o(i._ZN9Hip_Joint7SetHomeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hip_Joint::SetHome()
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Set_Current_Position(float, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joint.o(.constdata__ZTV9Hip_Joint)
</UL>
<P><STRONG><a name="[183]"></a>Hip_Joint::Hip_Joint(Joint_Motor_Id)</STRONG> (Thumb, 58 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN9Hip_JointC1E14Joint_Motor_Id))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Hip_Joint::Hip_Joint(Joint_Motor_Id) &rArr; Motor::Motor(int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::JointInterface__sub_object()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Hip_Thread(const void*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Hip_Thread(const void*)
</UL>

<P><STRONG><a name="[2ac]"></a>Hip_Joint::Hip_Joint__sub_object(Joint_Motor_Id)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, .\objects\joint.o(i._ZN9Hip_JointC1E14Joint_Motor_Id), UNUSED)

<P><STRONG><a name="[96]"></a>UsartUser::GetCommand()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\objects\user.o(i._ZN9UsartUser10GetCommandEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UsartUser::GetCommand() &rArr; SerialUSART2::getChar() &rArr; USART2_getChar()
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUSART2::getChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user.o(.constdata__ZTV9UsartUser)
</UL>
<P><STRONG><a name="[1fd]"></a>UsartUser::UsartUser()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\objects\user.o(i._ZN9UsartUserC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ad]"></a>UsartUser::UsartUser__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\user.o(i._ZN9UsartUserC1Ev), UNUSED)

<P><STRONG><a name="[9d]"></a>std::__rw_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNKSt14__rw_exception4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[1c2]"></a>std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base11_C_cat_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[1c6]"></a>std::__rw_messages_base::_C_get_locale(int) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base13_C_get_localeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = std::__rw_messages_base::_C_get_locale(int) const &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[1c8]"></a>std::__rw_messages_base::_C_get_message(int, int, int) const</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base14_C_get_messageEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = std::__rw_messages_base::_C_get_message(int, int, int) const &rArr; std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[1d3]"></a>std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNKSt5ctypeIcE2isENSt10ctype_base4maskEc))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[1c9]"></a>std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale13_C_make_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[1cc]"></a>std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale16_C_install_facetEPN4__rw15__rw_facet_baseERKNS_2idE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const &rArr; __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[1cd]"></a>std::locale::name() const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale4nameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[1ce]"></a>std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt11char_traitsIcE4copyEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1cf]"></a>std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcE17_C_get_mask_tableEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[1d1]"></a>std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcEC1EPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[2ae]"></a>std::ctype_byname&lang;char&rang;::ctype_byname__sub_object(const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcEC1EPKcj), UNUSED)

<P><STRONG><a name="[9a]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating() &rArr; std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[99]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[2af]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[1b0]"></a>std::__rw_exception::_C_vformat(int, std::__va_list)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exception10_C_vformatEiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[1af]"></a>std::__rw_exception::__rw_exception()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_exception::__rw_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[2b0]"></a>std::__rw_exception::__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[9c]"></a>std::__rw_exception::~__rw_exception()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[2b1]"></a>std::__rw_exception::~__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[1d6]"></a>std::__rw_messages_base::~__rw_messages_base()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt18__rw_messages_baseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>

<P><STRONG><a name="[2b2]"></a>std::__rw_messages_base::~__rw_messages_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt18__rw_messages_baseD1Ev), UNUSED)

<P><STRONG><a name="[76]"></a>std::__rw_open_cat_data::__rw_open_cat_data()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
</UL>
<P><STRONG><a name="[2b3]"></a>std::__rw_open_cat_data::__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev), UNUSED)

<P><STRONG><a name="[75]"></a>std::__rw_open_cat_data::~__rw_open_cat_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__rw_open_cat_data::~__rw_open_cat_data() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
<LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
</UL>
<P><STRONG><a name="[2b4]"></a>std::__rw_open_cat_data::~__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev), UNUSED)

<P><STRONG><a name="[1d8]"></a>std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&) &rArr; std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>

<P><STRONG><a name="[9b]"></a>std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = std::ctype&lang;char&rang;::_C_initfacet(const std::locale&) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[1d2]"></a>std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[2b5]"></a>std::ctype&lang;char&rang;::ctype__sub_object(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj), UNUSED)

<P><STRONG><a name="[9f]"></a>std::ctype&lang;char&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ctype&lang;char&rang;::~ctype__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[9e]"></a>std::ctype&lang;char&rang;::~ctype()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[2b6]"></a>std::ctype&lang;char&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev), UNUSED)

<P><STRONG><a name="[97]"></a>std::locale::facet::~facet__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt6locale5facetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::locale::facet::~facet__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[1d9]"></a>std::locale::_C_init()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[1c7]"></a>std::locale::classic()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7classicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>

<P><STRONG><a name="[1cb]"></a>std::locale::locale(__rw::__rw_locale_imp*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[2b7]"></a>std::locale::locale__sub_object(__rw::__rw_locale_imp*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE), UNUSED)

<P><STRONG><a name="[1d7]"></a>std::locale::locale(const std::locale&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt6localeC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>

<P><STRONG><a name="[2b8]"></a>std::locale::locale__sub_object(const std::locale&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt6localeC1ERKS_), UNUSED)

<P><STRONG><a name="[1ad]"></a>std::locale::locale()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt6localeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[2b9]"></a>std::locale::locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt6localeC1Ev), UNUSED)

<P><STRONG><a name="[61]"></a>std::locale::~locale()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZNSt6locale7classicEv)
</UL>
<P><STRONG><a name="[2ba]"></a>std::locale::~locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeD1Ev), UNUSED)

<P><STRONG><a name="[1c5]"></a>std::locale::operator =(const std::locale&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
</UL>

<P><STRONG><a name="[a1]"></a>std::messages&lang;char&rang;::~messages__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::messages&lang;char&rang;::~messages__deallocating() &rArr; std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[a0]"></a>std::messages&lang;char&rang;::~messages()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[2bb]"></a>std::messages&lang;char&rang;::~messages__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev), UNUSED)

<P><STRONG><a name="[1d5]"></a>std::exception::exception()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(exception_ctor.o)(i._ZNSt9exceptionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
</UL>

<P><STRONG><a name="[2bc]"></a>std::exception::exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(exception_ctor.o)(i._ZNSt9exceptionC1Ev), UNUSED)

<P><STRONG><a name="[1c3]"></a>std::__rw_get_cats()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZSt13__rw_get_catsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[190]"></a>std::pow(float, int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\objects\trajectory.o(i._ZSt3powfi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::pow(float, int) &rArr; powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[64]"></a>operator delete[] (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(array_del.o)(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[18c]"></a>operator delete (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(delete.o)(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet__deallocating()
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>

<P><STRONG><a name="[1a8]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(array_new.o)(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[171]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(new.o)(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Ankle_Thread(const void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Knee_Thread(const void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Ankle_Thread(const void*)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Hip_Thread(const void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Knee_Thread(const void*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Hip_Thread(const void*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
</UL>

<P><STRONG><a name="[1dd]"></a>__ARM_array_new_general</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(array_new_general.o)(i.__ARM_array_new_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[12c]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(fpclassify.o)(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>

<P><STRONG><a name="[201]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(fpclassifyf.o)(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_vec_dtor_cookie</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_dtor_cookie.o)(i.__aeabi_vec_dtor_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[1b5]"></a>__aeabi_vec_new_cookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_new_cookie.o)(i.__aeabi_vec_new_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1db]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_guard_acquire.o)(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[8b]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 4]<UL><LI> user.o(.constdata__ZTV12SerialStream)
<LI> user.o(.constdata__ZTV13UserInterface)
<LI> trajectory.o(.constdata__ZTV19TrajectoryInterface)
<LI> joint.o(.constdata__ZTV14JointInterface)
</UL>
<P><STRONG><a name="[1e1]"></a>__cxa_vec_new</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_vec_new.o)(i.__cxa_vec_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>

<P><STRONG><a name="[1e2]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(dunder.o)(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[1e4]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(dunder.o)(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[1e5]"></a>__mathlib_flt_divzero</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(funder.o)(i.__mathlib_flt_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_flt_divzero &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[1e6]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(funder.o)(i.__mathlib_flt_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_flt_infnan2 &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[1e7]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(funder.o)(i.__mathlib_flt_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_flt_invalid &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[1e8]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(funder.o)(i.__mathlib_flt_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[1ea]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(funder.o)(i.__mathlib_flt_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[155]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(narrow.o)(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[1eb]"></a>__mathlib_tofloat</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(narrow.o)(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_tofloat &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[15b]"></a>__support_ldexp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(ldexp.o)(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[122]"></a>__user_perthread_libspace</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\objects\rtx_conf_cm.o(i.__user_perthread_libspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[21c]"></a>_init_box</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_membox.o)(i._init_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _init_box
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[117]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__printf_wp.o)(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[ac]"></a>_mutex_acquire</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\objects\rtx_conf_cm.o(i._mutex_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[107]"></a>_mutex_initialize</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\objects\rtx_conf_cm.o(i._mutex_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _mutex_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>

<P><STRONG><a name="[ad]"></a>_mutex_release</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\objects\rtx_conf_cm.o(i._mutex_release))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[eb]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\objects\retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[149]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\retarget.o(i._ttywrch))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[21b]"></a>dbg_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.dbg_init))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[222]"></a>dbg_task_notify</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.dbg_task_notify))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>

<P><STRONG><a name="[219]"></a>dbg_task_switch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.dbg_task_switch))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>

<P><STRONG><a name="[13d]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[5c]"></a>fputc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\objects\retarget.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[1ec]"></a>frexp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(frexp.o)(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[1f3]"></a>isrMessageGet</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.isrMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = isrMessageGet &rArr; isr_mbx_receive &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
</UL>

<P><STRONG><a name="[1f5]"></a>isrMessagePut</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.isrMessagePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = isrMessagePut &rArr; isr_mbx_send &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_check
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>

<P><STRONG><a name="[1f8]"></a>isrSignalSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.isrSignalSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = isrSignalSet &rArr; isr_evt_set &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
</UL>

<P><STRONG><a name="[1fa]"></a>isr_evt_set</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_event.o)(i.isr_evt_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_evt_set &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrSignalSet
</UL>

<P><STRONG><a name="[1f4]"></a>isr_mbx_receive</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.isr_mbx_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_mbx_receive &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessageGet
</UL>

<P><STRONG><a name="[1f7]"></a>isr_mbx_send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.isr_mbx_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_mbx_send &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>

<P><STRONG><a name="[1f0]"></a>ldexp</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(ldexp.o)(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[82]"></a>main</STRONG> (Thumb, 572 bytes, Stack size 24 bytes, .\objects\main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = main &rArr; Linker::Start_Routine() &rArr; SerialStream::printf(const char*, ...) &rArr; __c89vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartUser::UsartUser()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartUser::GetCommand()
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Start_Routine()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Pause_Routine()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Stop_Routine()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialStream::printf(const char*, ...)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitThreads()
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Initialize
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>osKernelInitialize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osKernelInitialize &rArr; svcKernelInitialize &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
</UL>

<P><STRONG><a name="[ee]"></a>osKernelStart</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osKernelStart
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
</UL>

<P><STRONG><a name="[1fe]"></a>osMessageGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osMessageGet &rArr; isrMessageGet &rArr; isr_mbx_receive &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessageGet
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerThread
</UL>

<P><STRONG><a name="[16f]"></a>osMutexCreate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osMutexCreate &rArr; svcMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitThreads()
</UL>

<P><STRONG><a name="[174]"></a>osSignalSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osSignalSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osSignalSet &rArr; isrSignalSet &rArr; isr_evt_set &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrSignalSet
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Ankle_Thread(const void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Knee_Thread(const void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Ankle_Thread(const void*)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Hip_Thread(const void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Knee_Thread(const void*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Hip_Thread(const void*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phase_Thread(const void*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[170]"></a>osSignalWait</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osSignalWait))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Ankle_Thread(const void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Knee_Thread(const void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Ankle_Thread(const void*)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Hip_Thread(const void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Knee_Thread(const void*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Hip_Thread(const void*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Routine_Thread(const void*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phase_Thread(const void*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[ed]"></a>osThreadCreate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osThreadCreate &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitThreads()
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
</UL>

<P><STRONG><a name="[74]"></a>osThreadExit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osThreadExit))
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.svcThreadCreate)
</UL>
<P><STRONG><a name="[1ff]"></a>osTimerCall</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osTimerCall))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerThread
</UL>

<P><STRONG><a name="[81]"></a>osTimerThread</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.osTimerThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osTimerThread &rArr; osMessageGet &rArr; isrMessageGet &rArr; isr_mbx_receive &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerCall
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(.constdata)
</UL>
<P><STRONG><a name="[214]"></a>os_error</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\objects\rtx_conf_cm.o(i.os_error))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>

<P><STRONG><a name="[73]"></a>os_idle_demon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\objects\rtx_conf_cm.o(i.os_idle_demon))
<BR>[Address Reference Count : 1]<UL><LI> rt_task.o(i.rt_sys_init)
</UL>
<P><STRONG><a name="[21f]"></a>os_tick_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.os_tick_init))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_start
</UL>

<P><STRONG><a name="[f3]"></a>os_tick_irqack</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.os_tick_irqack), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Handler
</UL>

<P><STRONG><a name="[2bd]"></a>__mathlib_powf</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(powf.o)(i.powf), UNUSED)

<P><STRONG><a name="[1dc]"></a>powf</STRONG> (Thumb, 1548 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_ws.l(powf.o)(i.powf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = powf &rArr; _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix_r
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
</UL>

<P><STRONG><a name="[52]"></a>rt_alloc_box</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_membox.o)(i.rt_alloc_box))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[22a]"></a>rt_alloc_mem</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_memory.o)(i.rt_alloc_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_alloc_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>

<P><STRONG><a name="[202]"></a>rt_block</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_dly
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_wait
</UL>

<P><STRONG><a name="[206]"></a>rt_chk_robin</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_robin.o)(i.rt_chk_robin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_chk_robin &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[208]"></a>rt_dec_dly</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_dec_dly))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rt_dec_dly &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[209]"></a>rt_dispatch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
</UL>

<P><STRONG><a name="[20b]"></a>rt_evt_psh</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_event.o)(i.rt_evt_psh))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_evt_psh &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[20e]"></a>rt_evt_set</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_event.o)(i.rt_evt_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rt_evt_set &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalSet
</UL>

<P><STRONG><a name="[20f]"></a>rt_evt_wait</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_event.o)(i.rt_evt_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_evt_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalWait
</UL>

<P><STRONG><a name="[53]"></a>rt_free_box</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_membox.o)(i.rt_free_box))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[22b]"></a>rt_free_mem</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_memory.o)(i.rt_free_mem))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>

<P><STRONG><a name="[204]"></a>rt_get_first</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_get_first))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[226]"></a>rt_init_mem</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_memory.o)(i.rt_init_mem))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelInitialize
</UL>

<P><STRONG><a name="[21d]"></a>rt_init_robin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_robin.o)(i.rt_init_robin))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[211]"></a>rt_init_stack</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.rt_init_stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_init_stack
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
</UL>

<P><STRONG><a name="[1f6]"></a>rt_mbx_check</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.rt_mbx_check))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>

<P><STRONG><a name="[228]"></a>rt_mbx_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.rt_mbx_init))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageCreate
</UL>

<P><STRONG><a name="[212]"></a>rt_mbx_psh</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.rt_mbx_psh))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rt_mbx_psh &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[215]"></a>rt_mbx_wait</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mailbox.o)(i.rt_mbx_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rt_mbx_wait &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageGet
</UL>

<P><STRONG><a name="[1f2]"></a>rt_mut_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mutex.o)(i.rt_mut_init))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexCreate
</UL>

<P><STRONG><a name="[68]"></a>rt_mut_release</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mutex.o)(i.rt_mut_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_mut_release &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(i._mutex_release)
</UL>
<P><STRONG><a name="[67]"></a>rt_mut_wait</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_mutex.o)(i.rt_mut_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_mut_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(i._mutex_acquire)
</UL>
<P><STRONG><a name="[f0]"></a>rt_pop_req</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.rt_pop_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_pop_req &rArr; rt_mbx_psh &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[1fc]"></a>rt_psh_req</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.rt_psh_req))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
</UL>

<P><STRONG><a name="[1fb]"></a>rt_psq_enq</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_psq_enq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
</UL>

<P><STRONG><a name="[203]"></a>rt_put_dly</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_put_dly))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_put_dly
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[207]"></a>rt_put_prio</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_put_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>

<P><STRONG><a name="[20a]"></a>rt_put_rdy_first</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_put_rdy_first))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>

<P><STRONG><a name="[216]"></a>rt_resort_prio</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_resort_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_resort_prio &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_list
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
</UL>

<P><STRONG><a name="[213]"></a>rt_ret_val</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.rt_ret_val))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
</UL>

<P><STRONG><a name="[20d]"></a>rt_ret_val2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(hal_cm.o)(i.rt_ret_val2))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
</UL>

<P><STRONG><a name="[20c]"></a>rt_rmv_dly</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_rmv_dly))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_rmv_dly
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
</UL>

<P><STRONG><a name="[218]"></a>rt_rmv_list</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_list.o)(i.rt_rmv_list))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
</UL>

<P><STRONG><a name="[217]"></a>rt_sem_psh</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_semaphore.o)(i.rt_sem_psh))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_sem_psh &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[ef]"></a>rt_stk_check</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.rt_stk_check))
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
</UL>

<P><STRONG><a name="[205]"></a>rt_switch_req</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_switch_req))
<BR><BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[21a]"></a>rt_sys_init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_sys_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rt_sys_init &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_robin
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_box
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelInitialize
</UL>

<P><STRONG><a name="[21e]"></a>rt_sys_start</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_sys_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_sys_start
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_tick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>

<P><STRONG><a name="[f1]"></a>rt_systick</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_system.o)(i.rt_systick))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rt_systick &rArr; sysTimerTick &rArr; isrMessagePut &rArr; isr_mbx_send &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[221]"></a>rt_tsk_create</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_tsk_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_notify
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>

<P><STRONG><a name="[223]"></a>rt_tsk_delete</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_tsk_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = rt_tsk_delete &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_list
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_PSP
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_notify
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
</UL>

<P><STRONG><a name="[225]"></a>rt_tsk_prio</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_tsk_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rt_tsk_prio &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>

<P><STRONG><a name="[1f1]"></a>rt_tsk_self</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_tsk_self))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadGetId
</UL>

<P><STRONG><a name="[69]"></a>svcKernelInitialize</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = svcKernelInitialize &rArr; svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_mem
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osKernelInitialize)
</UL>
<P><STRONG><a name="[6a]"></a>svcKernelStart</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = svcKernelStart &rArr; rt_tsk_prio &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osKernelStart)
</UL>
<P><STRONG><a name="[227]"></a>svcMessageCreate</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcMessageCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcMessageCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelInitialize
</UL>

<P><STRONG><a name="[6b]"></a>svcMessageGet</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = svcMessageGet &rArr; rt_mbx_wait &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osMessageGet)
</UL>
<P><STRONG><a name="[6c]"></a>svcMutexCreate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osMutexCreate)
</UL>
<P><STRONG><a name="[6d]"></a>svcSignalSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcSignalSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcSignalSet &rArr; rt_evt_set &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osSignalSet)
</UL>
<P><STRONG><a name="[6e]"></a>svcSignalWait</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcSignalWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcSignalWait &rArr; rt_evt_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osSignalWait)
</UL>
<P><STRONG><a name="[6f]"></a>svcThreadCreate</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = svcThreadCreate &rArr; rt_tsk_create &rArr; rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_mem
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osThreadCreate)
</UL>
<P><STRONG><a name="[70]"></a>svcThreadGetId</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadGetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osThreadExit)
</UL>
<P><STRONG><a name="[71]"></a>svcThreadTerminate</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcThreadTerminate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = svcThreadTerminate &rArr; rt_tsk_delete &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_mem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osThreadExit)
</UL>
<P><STRONG><a name="[72]"></a>svcTimerCall</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.svcTimerCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcTimerCall
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(i.osTimerCall)
</UL>
<P><STRONG><a name="[220]"></a>sysTimerTick</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.sysTimerTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sysTimerTick &rArr; isrMessagePut &rArr; isr_mbx_send &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_insert
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[dc]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_numeric_c.o)(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[5b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_ctype_c.o)(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[239]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE10_C_inc_refEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[77]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
</UL>
<P><STRONG><a name="[1ca]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEE6resizeEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>

<P><STRONG><a name="[1b8]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[2be]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev), UNUSED)

<P><STRONG><a name="[65]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
</UL>
<P><STRONG><a name="[2bf]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev), UNUSED)

<P><STRONG><a name="[1b9]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[2c0]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev), UNUSED)

<P><STRONG><a name="[1c4]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[62]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(i._ZSt13__rw_get_catsv)
</UL>
<P><STRONG><a name="[2c1]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev), UNUSED)

<P><STRONG><a name="[22f]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNKSt6vectorIP19TrajectoryInterfaceSaIS1_EE3endEv))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::size() const
</UL>

<P><STRONG><a name="[22e]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::size() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\objects\routine.o(t._ZNKSt6vectorIP19TrajectoryInterfaceSaIS1_EE4sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::size() const
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin() const
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[230]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNKSt6vectorIP19TrajectoryInterfaceSaIS1_EE5beginEv))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::size() const
</UL>

<P><STRONG><a name="[23b]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::capacity() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNKSt6vectorIP19TrajectoryInterfaceSaIS1_EE8capacityEv))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[a3]"></a>std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[a2]"></a>std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[231]"></a>std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\objects\routine.o(t._ZNSaIP19TrajectoryInterfaceE10deallocateEPS0_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[241]"></a>std::allocator&lang;TrajectoryInterface*&rang;::destroy(TrajectoryInterface**)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\objects\osobjects.o(t._ZNSaIP19TrajectoryInterfaceE7destroyEPS0_))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::pop_back()
</UL>

<P><STRONG><a name="[23c]"></a>std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, .\objects\osobjects.o(t._ZNSaIP19TrajectoryInterfaceE9constructEPS0_RKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;TrajectoryInterface**, TrajectoryInterface**, std::allocator&lang;TrajectoryInterface*&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[232]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSs11_C_allocateEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[235]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSs7replaceEjjPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
</UL>

<P><STRONG><a name="[236]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSs7replaceEjjPKcjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
</UL>

<P><STRONG><a name="[234]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSs9_C_getRepEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[237]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSs9_C_unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1ab]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1EPKcRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
</UL>

<P><STRONG><a name="[2c2]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1EPKcRKSaIcE), UNUSED)

<P><STRONG><a name="[162]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1ERKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[2c3]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1ERKSaIcE), UNUSED)

<P><STRONG><a name="[1ac]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsC1ERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[2c4]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsC1ERKSs), UNUSED)

<P><STRONG><a name="[5f]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
</UL>
<P><STRONG><a name="[2c5]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZNSsD1Ev), UNUSED)

<P><STRONG><a name="[1da]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[1b6]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsaSERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[240]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_destroy(TrajectoryInterface**, TrajectoryInterface**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE10_C_destroyEPS1_S4_))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[23a]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE13_C_insert_auxEPS1_RKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;TrajectoryInterface**, TrajectoryInterface**, std::allocator&lang;TrajectoryInterface*&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_destroy(TrajectoryInterface**, TrajectoryInterface**)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::capacity() const
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[23f]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE3endEv))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[23d]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\objects\routine.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE5beginEv))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[175]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::pop_back()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE8pop_backEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::pop_back()
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::destroy(TrajectoryInterface**)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[173]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EE9push_backERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::push_back(TrajectoryInterface*const &) &rArr; std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotThread(const void*)
</UL>

<P><STRONG><a name="[66]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector() &rArr; std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::end()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_destroy(TrajectoryInterface**, TrajectoryInterface**)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::deallocate(TrajectoryInterface**, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(i.__sti___13_OsObjects_cpp_Linker)
</UL>
<P><STRONG><a name="[2c6]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::~vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EED1Ev), UNUSED)

<P><STRONG><a name="[184]"></a>std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\objects\osobjects.o(t._ZNSt6vectorIP19TrajectoryInterfaceSaIS1_EEixEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::operator [](unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::begin()
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Ankle_Thread(const void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Knee_Thread(const void*)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Ankle_Thread(const void*)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Hip_Thread(const void*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Knee_Thread(const void*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Hip_Thread(const void*)
</UL>

<P><STRONG><a name="[23e]"></a>T2 std::uninitialized_copy&lang;TrajectoryInterface**, TrajectoryInterface**, std::allocator&lang;TrajectoryInterface*&rang;&rang;(T1, T1, T2, T3&)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\objects\osobjects.o(t._ZSt18uninitialized_copyIPP19TrajectoryInterfaceS2_SaIS1_EET0_T_S5_S4_RT1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = T2 std::uninitialized_copy&lang;TrajectoryInterface**, TrajectoryInterface**, std::allocator&lang;TrajectoryInterface*&rang;&rang;(T1, T1, T2, T3&) &rArr; std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;TrajectoryInterface*&rang;::construct(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;TrajectoryInterface*, std::allocator&lang;TrajectoryInterface*&rang;&rang;::_C_insert_aux(TrajectoryInterface**, TrajectoryInterface*const &)
</UL>

<P><STRONG><a name="[233]"></a>const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZSt3maxIjERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[193]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(d2f.o)(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[242]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(d2f.o)(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[192]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[245]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[248]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dcheck1.o)(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[24b]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dcmpi.o)(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[1ed]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(deqf.o)(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[24a]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(deqf.o)(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[2c7]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dleqf.o)(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[24c]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dleqf.o)(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[24f]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dleqf.o)(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[18f]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dmul.o)(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[24d]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dmul.o)(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[244]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dnaninf.o)(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[247]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(dretinf.o)(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1ee]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(drleqf.o)(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[24e]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(drleqf.o)(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[1a6]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
</UL>

<P><STRONG><a name="[250]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[191]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[252]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[18e]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(f2d.o)(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[253]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(f2d.o)(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[194]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_C(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
</UL>

<P><STRONG><a name="[255]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[257]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fcheck1.o)(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[25b]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fcmpi.o)(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[196]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fdiv.o)(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
</UL>

<P><STRONG><a name="[258]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fdiv.o)(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[198]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(ffix.o)(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_C(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
</UL>

<P><STRONG><a name="[259]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(ffix.o)(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[200]"></a>_ffix_r</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(ffix.o)(x$fpl$ffixr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ffix_r &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[19f]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fflt_clz.o)(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pow(float, int)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Anatomic_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_C(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[2c8]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fflt_clz.o)(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[1a0]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fleqf.o)(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_C(float)
</UL>

<P><STRONG><a name="[25a]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fleqf.o)(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[2c9]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fleqf.o)(x$fpl$fleqf), UNUSED)

<P><STRONG><a name="[197]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fmul.o)(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[25c]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fmul.o)(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[254]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fnaninf.o)(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix_r
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[243]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(fretinf.o)(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[19e]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_V(float)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetAbsolutePosition_C(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[25d]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[195]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Gate_Trajectory::Perform_Trajectory(JointInterface*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hip_Joint::GetMotorPulses(float)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointInterface::SetRelativePosition_V(float)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ankle_Joint::GetMotorPulses(float)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Knee_Joint::GetMotorPulses(float)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
</UL>

<P><STRONG><a name="[25f]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[5]"></a>__ieee_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(istatus.o)(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[b9]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(printf1.o)(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[bd]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(printf2.o)(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[249]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(retnan.o)(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[1e3]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(scalbn.o)(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[1e9]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(scalbnf.o)(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powf
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
</UL>

<P><STRONG><a name="[14d]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(scanf1.o)(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[154]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(scanf2.o)(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[153]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(scanf2.o)(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[260]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(trapv.o)(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a4]"></a>__sti___8_main_cpp_usart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\objects\main.o(i.__sti___8_main_cpp_usart))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = __sti___8_main_cpp_usart &rArr; SerialUSART2::SerialUSART2(int) &rArr; USART2_init(int) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUSART2::SerialUSART2(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[a5]"></a>__sti___13_OsObjects_cpp_Linker</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\objects\osobjects.o(i.__sti___13_OsObjects_cpp_Linker))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __sti___13_OsObjects_cpp_Linker &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linker::Linker()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osobjects.o(.init_array)
</UL>
<P><STRONG><a name="[16a]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, .\objects\system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[16b]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, .\objects\system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[22c]"></a>rt_id2obj</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.rt_id2obj))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerCall
</UL>

<P><STRONG><a name="[229]"></a>rt_ms2tick</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.rt_ms2tick))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalWait
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageGet
</UL>

<P><STRONG><a name="[1f9]"></a>rt_tid2ptcb</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.rt_tid2ptcb))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalSet
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrSignalSet
</UL>

<P><STRONG><a name="[22d]"></a>rt_timer_insert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_cmsis.o)(i.rt_timer_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rt_timer_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>

<P><STRONG><a name="[210]"></a>rt_init_context</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS\RTX\LIB\ARM\RTX_CM3.lib(rt_task.o)(i.rt_init_context))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_stack
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[f5]"></a>Heap1_SizeAdjust</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[251]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[246]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(daddsub_clz.o)(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[25e]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[256]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_ws.l(faddsub_clz.o)(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[57]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[1a7]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list) &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1a9]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[126]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[a6]"></a>__sti___8_char_cpp_a3dc957a</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i.__sti___8_char_cpp_a3dc957a))
<BR>[Address Reference Count : 1]<UL><LI> char.o(.init_array)
</UL>
<P><STRONG><a name="[60]"></a>&lang;Func5&rang;</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.<Func5>))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = &lang;Func5&rang; &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
</UL>
<P><STRONG><a name="[a7]"></a>__sti___10_locale_cpp_ff99fc7b</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.__sti___10_locale_cpp_ff99fc7b))
<BR>[Address Reference Count : 1]<UL><LI> locale.o(.init_array)
</UL>
<P><STRONG><a name="[5a]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>__sti___10_rwcats_cpp_64e8068e</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __sti___10_rwcats_cpp_64e8068e &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(.init_array)
</UL>
<P><STRONG><a name="[14f]"></a>_fp_value</STRONG> (Thumb, 588 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_fp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[156]"></a>_locale_name</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_mixed
</UL>

<P><STRONG><a name="[158]"></a>_set_locale_mixed</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[157]"></a>_set_locale_byname</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
